# OG File = Victoria 3\game\events\law_imposition_events.txt

namespace = law_imposition_events

law_imposition_events.1 = {
	type = country_event
	placement = root
	event_image = {
		video = "ep1_persian_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	title = law_imposition_events.1.t
	desc = law_imposition_events.1.d
	flavor = law_imposition_events.1.f

	duration = 3

	cancellation_trigger = {
		NOR = {
			exists = imposed_law
			exists = imposer_of_law
		}
	}
	
	trigger = {
		# Triggered by on_impose_law
	}
	
	# OPTION 1 - They aren't busy and have no good reason not to.
	option = { # start enacting immediately
		name = law_imposition_events.1.a.1
		trigger = {
			enacting_any_law = no		
		}
		show_as_unavailable = {
			always = yes
		}
		add_journal_entry = {
			type = je_law_imposition
		}
		start_enactment = imposed_law.type
		add_enactment_modifier = {
			name = agreeable_to_imposition
		}
		add_enactment_modifier = {
			name = IB_success
		}
		custom_tooltip = {
			text = law_imposition_events.1.journal_entry_hint
		}
		hidden_effect = {
			if = {
				limit = {
					je:je_law_imposition ?= {
						has_modifier = foreign_legislative_interference
					}
				}
				je:je_law_imposition ?= {
					remove_modifier = foreign_legislative_interference
					add_modifier = foreign_legislative_interference_enactment
				}
			}
		}
		
		ai_chance = {
			base = 10
			modifier = {
				trigger = {
					0 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.05 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.10 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.15 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.20 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.25 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.30 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.35 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.40 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
		}
	}
	
	# OPTION 2 - They are busy but aren't too attached to it.
	option = { # cancel current law and start enacting immediately
		name = law_imposition_events.1.a.2
		trigger = {
			enacting_any_law = yes
		}
		cancel_enactment = yes
		add_journal_entry = {
			type = je_law_imposition
		}
		start_enactment = imposed_law.type
		add_enactment_modifier = {
			name = agreeable_to_imposition
		}
		add_enactment_modifier = {
			name = IB_success
		}
		custom_tooltip = {
			text = law_imposition_events.1.journal_entry_hint
		}
		hidden_effect = {
			if = {
				limit = {
					je:je_law_imposition ?= {
						has_modifier = foreign_legislative_interference
					}
				}
				je:je_law_imposition ?= {
					remove_modifier = foreign_legislative_interference
					add_modifier = foreign_legislative_interference_enactment
				}
			}
		}
		
		ai_chance = {
			base = 10
			modifier = {
				trigger = {
					0 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.05 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.10 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.15 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.20 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.25 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.30 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.35 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.40 < "enactment_chance_for_law(imposed_law.type)"
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.10 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.15 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.20 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.25 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.30 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.35 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.40 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.45 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.50 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.55 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.60 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.65 < enactment_chance
				}
				add = -10
			}
			modifier = {
				trigger = {
					0.70 < enactment_chance
				}
				add = -10
			}
		}
	}
	
	# OPTION 3 - They are busy and might want to finish something else first.
	option = { # defer
		name = law_imposition_events.1.b
		trigger = {
			NAND = { 
				OR = {
					is_subject_type = subject_type_puppet			# If not a Puppet, can always defer
					is_subject_type = subject_type_personal_union	# Or Personal Union
				}
				liberty_desire < 60									# If a Puppet, cannot defer at LD below 60
			}
			NAND = { 
				OR = {
					is_subject_type = subject_type_dominion	# If not a Dominion, can always defer
					is_subject_type = subject_type_vassal	# Or Vassal
				}
				liberty_desire < 45							# If a Dominion, cannot defer at LD below 45
			}
		}
		default_option = yes
		add_journal_entry = {
			type = je_law_imposition
		}
		scope:foreign_imposition_country = {
			post_notification = imposition_deferred
		}
		custom_tooltip = {
			text = law_imposition_events.1.journal_entry_hint
		}
		
		ai_chance = { # i.e. unless you're enacting a law at the moment, you should only very rarely pick this option
			base = 10
			modifier = {
				trigger = {
					enacting_any_law = no
				}
				add = -5
			}
		}
	}
	
	# OPTION 4 - They are rude and don't wanna play nice.
	option = { # refuse
		name = law_imposition_events.1.c
		trigger = {
			NAND = { 
				OR = {
					is_subject_type = subject_type_puppet			# If not a Puppet, can always refuse
					is_subject_type = subject_type_personal_union	# Or Personal Union
				}
				liberty_desire < 75									# If a Puppet, cannot refuse at LD below 75
			}
			NAND = { 
				OR = {
					is_subject_type = subject_type_dominion	# If not a Dominion, can always refuse
					is_subject_type = subject_type_vassal	# Or Vassal
				}
				liberty_desire < 60							# If a Dominion, cannot refuse at LD below 60
			}
		}
		change_relations = {
			country = imposer_of_law
			value = -30
		}
		if = {
			limit = { is_subject_of = imposer_of_law }
			add_liberty_desire = 5
		}
		else_if = {
			limit = { power_bloc ?= imposer_of_law.power_bloc }
			power_bloc = {
				add_cohesion_percent = -0.05
			}
		}
		save_scope_as = country_imposed_upon
		imposer_of_law = {
			trigger_event = { id = law_imposition_events.3 popup = yes  }
		}
		imposed_law = {
			cancel_imposition = yes
		}
		every_political_lobby = {
			limit = {
				target = scope:foreign_imposition_country
				OR = {
					is_political_lobby_type = lobby_pro_country
					is_political_lobby_type = lobby_pro_overlord
				}
			}
			change_appeasement = { 
				amount = -2 
				factor = appeasement_imposed_law_rejected 
			}
		}
		every_political_lobby = {
			limit = {
				target = scope:foreign_imposition_country
				OR = {
					is_political_lobby_type = lobby_anti_country
					is_political_lobby_type = lobby_anti_overlord
				}
			}
			change_appeasement = { 
				amount = 1 
				factor = appeasement_imposed_law_rejected 
			}
		}
		ai_chance = { # e.g. if you have very low success chance then your Relations and/or Liberty Desire should make you likely to select this
			base = 1
			modifier = {
				trigger = {
					0.1 > "enactment_chance_for_law(imposed_law.type)"
					liberty_desire > 40
				}
				add = 20
			}
			modifier = {
				trigger = {
					0.1 > "enactment_chance_for_law(imposed_law.type)"
					liberty_desire > 60
				}
				add = 50
			}
			modifier = {
				trigger = {
					0.1 > "enactment_chance_for_law(imposed_law.type)"
					scope:foreign_imposition_country = { relations:root <= relations_threshold:neutral }
				}
				add = 10
			}
			modifier = {
				trigger = {
					0.1 > "enactment_chance_for_law(imposed_law.type)"
					scope:foreign_imposition_country = { relations:root <= relations_threshold:poor }
				}
				add = 20
			}
			modifier = {
				trigger = {
					0.1 > "enactment_chance_for_law(imposed_law.type)"
					scope:foreign_imposition_country = { relations:root <= relations_threshold:cold }
				}
				add = 50
			}
		}
	}
}

# Triggers for the subject, to confirm it happened.
law_imposition_events.2 = { # abandon imposition with button_refuse_law_imposition, country imposed upon
	type = country_event
	placement = root
	event_image = {
		video = "ep1_persian_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	title = law_imposition_events.2.t
	desc = law_imposition_events.2.d
	flavor = law_imposition_events.2.f

	duration = 3
	
	trigger = {
		# Triggered by button_refuse_law_imposition
	}

	option = {
		name = law_imposition_events.2.a		
		default_option = yes
	}
}

# Triggers for the overlord, to alert them of refusal/willing abandonment.
law_imposition_events.3 = { # abandon imposition with button_refuse_law_imposition, imposing country
	type = country_event
	placement = root
	event_image = {
		video = "ep1_persian_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	title = law_imposition_events.3.t
	desc = law_imposition_events.3.d
	flavor = law_imposition_events.3.f

	duration = 3
	
	trigger = {
		# Triggered by button_refuse_law_imposition
	}

	option = {
		name = law_imposition_events.3.a		
		default_option = yes
	}
}

# Triggers for the overlord, to alert them of failure.
law_imposition_events.4 = { # abandon imposition with button_refuse_law_imposition, imposing country
	type = country_event
	placement = root
	event_image = {
		video = "ep1_persian_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	title = law_imposition_events.4.t
	desc = law_imposition_events.4.d
	flavor = law_imposition_events.4.f

	duration = 3
	
	trigger = {
		# Triggered by je_law_imposition becoming invalid
	}

	option = {
		name = law_imposition_events.4.a		
		default_option = yes
	}
}